FROM tomcat:8.5.41-jdk8

MAINTAINER Jimmy Joy "jimmy@yahoo1.com"

RUN rm -rf /usr/local/tomcat/webapps/*
COPY ./target/spring-demo-0.0.1-SNAPSHOT.war /usr/local/tomcat/webapps/spring-demo.war

#ENV JAVA_OPTS="=Dspring.profiles.active=spring-demo"

CMD ["catalina.sh", "run"]
############################### Docker Image ########################################
# docker build image
docker image build -t spring-demo:1.0 .
List all Docker Images
docker images -a
#Remove a Docker Image
docker rmi <image name>
#Delete All Docker Images
docker rmi $(docker images -q)
############################### Docker Run ########################################
docker run --name spring-demo -p 8080:8080 -it spring-demo:1.0 
#run in detached mode
docker run --name spring-demo -p 8080:8080 -d spring-demo:1.0
#use rm to remove when the container stops
docker run --name spring-demo -p 8080:8080 -it --rm spring-demo:1.0

############################### Docker Container ########################################
# list all running containers
docker ps
#List All Docker Containers
docker ps -a
#Start a Docker Container
docker start <container name>
#Stop a Docker Container
docker stop <container name>
#docker remove container
docker rm f8964e6e8a7c
#rm container
docker container rm spring-demo
# reclaim or cleanup all stopped containers
docker container prune
# get into the bash prompt of exiting containers
docker container exec -it spring-demo bash
docker container exec -it a9fb45140a1c48 bash
#inspect container
docker container inspect a9fb45140a1c48 bash
#Kill All Running Containers
docker kill $(docker ps -q)
#Delete All Stopped Docker Containers
docker rm $(docker ps -a -q)
#Specify an Environment Variable for a Docker Container
docker run -e MY_VAR=my_prop <image name>
################################ Docker logs ########################################
#to see logs of specific container
docker container logs -f spring-demo
#Tail the Console Output of a Running Docker Container
docker logs -f <container name>


############################### Docker Network ########################################
# to find all networks
docker network ls 
############################### Docker volume ########################################
# docker volume
docker volume ls

#start with volume
docker run --name spring-demo -v tomcatlogs:/usr/local/tomcat/logs -p 8080:8080 -d spring-demo:1.0
docker run --name spring-demo -v /home/jj36034/docker/logs:/usr/local/tomcat/logs -p 8080:8080 -d spring-demo:1.0
#list volumes
docker volume ls
docker volume inspect tomcatlogs

############################### Docker hub and private repository ########################################
#login to redhat registry 
docker login registry.redhat.io
#login to docker hub 
docker login registry.redhat.io
docker push jimmypjoy/spring-demo
docker push registry.redhat.io/jimmypjoy/spring-demo
############################### Openshift ########################################
# Openshift
oc login https://sd-eb5d-715f.nam.nsroot.net:844
#to get oc token
oc whoami -t
oc login --token=zQXftGzzynlQYaVIcozwtw_ca9S0zscFSz7QWz33pcE --server=https://api.us-west-2.online-starter.openshift.com:6443
oc new-app /home/jj36034/docker --strategy=docker
oc status
oc project testproject
oc new-app --docker-image="testwebapp:1.0"
